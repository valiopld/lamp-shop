{"ast":null,"code":"import _defineProperty from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import\"./sign-up.style.scss\";import{FormInput}from\"../form-input/form-input.component\";import{CustomButton}from\"../custom-button/custom-button.component\";import{signUpStart as _signUpStart}from\"../../redux/user/user.action\";var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:\"\",email:\"\",password:\"\",confirmPassword:\"\"}),_useState2=_slicedToArray(_useState,2),getUserCretentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=getUserCretentials.displayName,email=getUserCretentials.email,password=getUserCretentials.password,confirmPassword=getUserCretentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Passwords dont match\");return _context.abrupt(\"return\");case 4:signUpStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread(_objectSpread({},getUserCretentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-up\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"I do not have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with email and password\"),/*#__PURE__*/React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","getUserCretentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"6yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,sBAAP,CACA,OAASC,SAAT,KAA0B,oCAA1B,CACA,OAASC,YAAT,KAA6B,0CAA7B,CAEA,OAASC,WAAW,GAAXA,CAAAA,YAAT,KAA4B,8BAA5B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAqB,IAAlBD,CAAAA,WAAkB,MAAlBA,WAAkB,eACeJ,QAAQ,CAAC,CACxDM,WAAW,CAAE,EAD2C,CAExDC,KAAK,CAAE,EAFiD,CAGxDC,QAAQ,CAAE,EAH8C,CAIxDC,eAAe,CAAE,EAJuC,CAAD,CADvB,wCAC3BC,kBAD2B,eACPC,kBADO,kBAO1BL,CAAAA,WAP0B,CAOwBI,kBAPxB,CAO1BJ,WAP0B,CAObC,KAPa,CAOwBG,kBAPxB,CAObH,KAPa,CAONC,QAPM,CAOwBE,kBAPxB,CAONF,QAPM,CAOIC,eAPJ,CAOwBC,kBAPxB,CAOID,eAPJ,CASlC,GAAMG,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,kHACnBA,KAAK,CAACC,cAAN,GADmB,KAGfN,QAAQ,GAAKC,eAHE,0BAIjBM,KAAK,CAAC,sBAAD,CAAL,CAJiB,wCAOnBX,WAAW,CAAC,CAAEE,WAAW,CAAXA,WAAF,CAAeC,KAAK,CAALA,KAAf,CAAsBC,QAAQ,CAARA,QAAtB,CAAD,CAAX,CAPmB,sDAAH,kBAAZI,CAAAA,YAAY,6CAAlB,CAUA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,mBACNA,KAAK,CAACI,MADA,CACtBC,IADsB,eACtBA,IADsB,CAChBC,KADgB,eAChBA,KADgB,CAE9BR,kBAAkB,gCAAMD,kBAAN,wBAA2BQ,IAA3B,CAAkCC,KAAlC,GAAlB,CACD,CAHD,CAIA,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,0BAAI,SAAS,CAAC,OAAd,6BADF,cAEE,kEAFF,cAGE,4BAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEP,YAAzC,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,aAFP,CAGE,KAAK,CAAEN,WAHT,CAIE,QAAQ,CAAEU,YAJZ,CAKE,KAAK,CAAC,cALR,CAME,QAAQ,KANV,EADF,cASE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAET,KAHT,CAIE,QAAQ,CAAES,YAJZ,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EATF,cAiBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAER,QAHT,CAIE,QAAQ,CAAEQ,YAJZ,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EAjBF,cAyBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,iBAFP,CAGE,KAAK,CAAEP,eAHT,CAIE,QAAQ,CAAEO,YAJZ,CAKE,KAAK,CAAC,kBALR,CAME,QAAQ,KANV,EAzBF,cAiCE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YAjCF,CAHF,CADF,CAyCD,CAhED,CAkEA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCjB,WAAW,CAAE,qBAACkB,eAAD,QAAqBD,CAAAA,QAAQ,CAACjB,YAAW,CAACkB,eAAD,CAAZ,CAA7B,EAD2B,CAAf,EAA3B,CAGA,cAAerB,CAAAA,OAAO,CAAC,IAAD,CAAOmB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-up.style.scss\";\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.action\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [getUserCretentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { displayName, email, password, confirmPassword } = getUserCretentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords dont match\");\n      return;\n    }\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials({ ...getUserCretentials, [name]: value });\n  };\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign up with email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}