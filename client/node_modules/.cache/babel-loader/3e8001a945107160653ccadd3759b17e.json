{"ast":null,"code":"import _regeneratorRuntime from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from\"redux-saga/effects\";import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import{fetchColletionsSucces,fetchColectionsFailure}from\"./shop.actions\";import ShopActionsTypes from\"./shop.types\";export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection(\"collections\");_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchColletionsSucces(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchColectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionsTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchColletionsSucces","fetchColectionsFailure","ShopActionsTypes","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"4MASiBA,qB,iDAaAC,qB,iDAOAC,S,EA7BjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAKA,OAASC,qBAAT,CAAgCC,sBAAhC,KAA8D,gBAA9D,CACA,MAAOC,CAAAA,gBAAP,KAA6B,cAA7B,CAEA,MAAO,SAAUX,CAAAA,qBAAV,2LAEGY,aAFH,CAEmBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAFnB,iBAGc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHd,OAGGC,QAHH,+BAIoB,MAAMX,CAAAA,IAAI,CAC/BI,+BAD+B,CAE/BO,QAF+B,CAAV,CAJpB,OAIGC,cAJH,gCAQH,MAAMX,CAAAA,GAAG,CAACI,qBAAqB,CAACO,cAAD,CAAtB,CAAT,CARG,0GAUH,MAAMX,CAAAA,GAAG,CAACK,sBAAsB,CAAC,YAAMO,OAAP,CAAvB,CAAT,CAVG,qEAaP,MAAO,SAAUhB,CAAAA,qBAAV,qJACL,MAAME,CAAAA,UAAU,CACdQ,gBAAgB,CAACO,uBADH,CAEdlB,qBAFc,CAAhB,CADK,wDAOP,MAAO,SAAUE,CAAAA,SAAV,yIACL,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADK","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport { fetchColletionsSucces, fetchColectionsFailure } from \"./shop.actions\";\nimport ShopActionsTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchColletionsSucces(collectionsMap));\n  } catch (error) {\n    yield put(fetchColectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionsTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}