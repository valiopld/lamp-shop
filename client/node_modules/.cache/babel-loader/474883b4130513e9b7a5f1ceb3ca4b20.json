{"ast":null,"code":"import _defineProperty from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import\"./sign-in.style.scss\";import{FormInput}from\"../form-input/form-input.component\";import{CustomButton}from\"../custom-button/custom-button.component\";import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from\"../../redux/user/user.action\";var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),getCretentials=_useState2[0],setCredentials=_useState2[1];var email=getCretentials.email,password=getCretentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredentials(_objectSpread(_objectSpread({},getCretentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"I already have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Login with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",value:email,handleChange:handleChange,required:true,label:\"email\"}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",value:password,handleChange:handleChange,type:\"password\",label:\"password\",required:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"Sign In\"),/*#__PURE__*/React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign In with Google\"))));};var mapDispatchToPorps=function mapDispatchToPorps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToPorps)(SignIn);","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","getCretentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToPorps","dispatch"],"mappings":"6yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,sBAAP,CAEA,OAASC,SAAT,KAA0B,oCAA1B,CACA,OAASC,YAAT,KAA6B,0CAA7B,CAEA,OACEC,iBAAiB,GAAjBA,CAAAA,kBADF,CAEEC,gBAAgB,GAAhBA,CAAAA,iBAFF,KAGO,8BAHP,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eACjBJ,QAAQ,CAAC,CAChDO,KAAK,CAAE,EADyC,CAEhDC,QAAQ,CAAE,EAFsC,CAAD,CADS,wCACnDC,cADmD,eACnCC,cADmC,kBAKlDH,CAAAA,KALkD,CAK9BE,cAL8B,CAKlDF,KALkD,CAK3CC,QAL2C,CAK9BC,cAL8B,CAK3CD,QAL2C,CAO1D,GAAMG,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,kHACnBA,KAAK,CAACC,cAAN,GAEAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAHmB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,mBACNA,KAAK,CAACG,MADA,CACtBC,KADsB,eACtBA,KADsB,CACfC,IADe,eACfA,IADe,CAE9BP,cAAc,gCAAMD,cAAN,wBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAd,CACD,CAHD,CAKA,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,0BAAI,SAAS,CAAC,OAAd,8BADF,cAEE,qEAFF,cAGE,4BAAM,QAAQ,CAAEL,YAAhB,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEJ,KAHT,CAIE,YAAY,CAAEO,YAJhB,CAKE,QAAQ,KALV,CAME,KAAK,CAAC,OANR,EADF,cASE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAEN,QAFT,CAGE,YAAY,CAAEM,YAHhB,CAIE,IAAI,CAAC,UAJP,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EATF,cAiBE,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YADF,cAEE,oBAAC,YAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAEV,iBAFX,CAGE,cAAc,KAHhB,wBAFF,CAjBF,CAHF,CADF,CAkCD,CAnDD,CAqDA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADqB,CAExCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAChBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CADQ,EAFsB,CAAf,EAA3B,CAKA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./sign-in.style.scss\";\n\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.action\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [getCretentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = getCretentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setCredentials({ ...getCretentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2 className=\"title\">I already have an account</h2>\n      <span>Login with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          required\n          label=\"email\"\n        />\n        <FormInput\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          type=\"password\"\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign In with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToPorps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\nexport default connect(null, mapDispatchToPorps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}