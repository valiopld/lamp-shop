{"ast":null,"code":"var _jsxFileName = \"/home/valentin/dev/udemy-react/e-lamp/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-in.style.scss\";\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.action\";\n\nconst SignIn = () => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Login with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    handleChange: this.handleChange,\n    required: true,\n    label: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    value: this.state.password,\n    handleChange: this.handleChange,\n    type: \"password\",\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToPorps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToPorps)(SignIn);","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","handleSubmit","event","preventDefault","props","email","password","state","handleChange","value","name","target","setState","mapDispatchToPorps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,sBAAP;AAEA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,0CAA7B;AAEA,SACEC,iBADF,EAEEC,gBAFF,QAGO,8BAHP;;AAKA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAuB,KAAKK,KAAlC;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AAEAR,IAAAA,gBAAgB,CAACM,KAAD,EAAQC,QAAR,CAAhB;AACD,GAND;;AAOA,QAAME,YAAY,GAAIN,KAAD,IAAW;AAC9B,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,KAAK,CAACS,MAA9B;AACA,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQD;AAAV,KAAd;AACD,GAHD;;AAKA,QAAM;AAAEX,IAAAA;AAAF,MAAwB,KAAKM,KAAnC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,eAGE;AAAM,IAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE,KAAKM,KAAL,CAAWF,KAHpB;AAIE,IAAA,YAAY,EAAE,KAAKG,YAJrB;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAFpB;AAGE,IAAA,YAAY,EAAE,KAAKE,YAHrB;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEV,iBAFX;AAGE,IAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAjBF,CAHF,CADF;AAkCD,CAhDD;;AAkDA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADO;AAExCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,QAAR,KAChBQ,QAAQ,CAACf,gBAAgB,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAKA,eAAeX,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCb,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./sign-in.style.scss\";\n\nimport { FormInput } from \"../form-input/form-input.component\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.action\";\n\nconst SignIn = () => {\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n  };\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  const { googleSignInStart } = this.props;\n  return (\n    <div className=\"sign-in\">\n      <h2 className=\"title\">I already have an account</h2>\n      <span>Login with your email and password</span>\n      <form onSubmit={this.handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={this.state.email}\n          handleChange={this.handleChange}\n          required\n          label=\"email\"\n        />\n        <FormInput\n          name=\"password\"\n          value={this.state.password}\n          handleChange={this.handleChange}\n          type=\"password\"\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign In with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToPorps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\nexport default connect(null, mapDispatchToPorps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}