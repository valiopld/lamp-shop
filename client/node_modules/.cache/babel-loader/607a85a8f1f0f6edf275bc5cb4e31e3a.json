{"ast":null,"code":"var _jsxFileName = \"/home/valentin/dev/udemy-react/e-lamp/src/pages/shop-page/shop-page.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./shop-page.style.scss\";\nimport CollectionPage from \"../collection/collection.comopnent\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snap => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/src/pages/shop-page/shop-page.component.jsx"],"names":["React","Route","CollectionPage","CollectionOverview","firestore","convertCollectionsSnapshotToMap","connect","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snap","collectionsMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,wBAAP;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,IAAP,IAAgB;AACvC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,IAAD,CAAtD;AACD,KAFD;AAGD;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEjB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAnBoC;;AAsBvC,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,iBAAiB,EAAGP,cAAD,IAAoBM,QAAQ,CAACC,iBAAD;AADP,CAAf,CAA3B;;AAGA,eAAef,QAAf","sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\nimport \"./shop-page.style.scss\";\nimport CollectionPage from \"../collection/collection.comopnent\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport { connect } from \"react-redux\";\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapShot = null;\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async (snap) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snap);\n    });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) => dispatch(updateCollections),\n});\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}