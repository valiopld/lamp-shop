{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionsTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snap => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snap);\n    dispatch(fetchColletionsSucces(collectionsMap));\n  }).catch(error => dispatch(fetchColectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionsTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","dispatch","fetchCollectionsStart","get","then","snap","collectionsMap","convertCollectionsSnapshotToMap","fetchColletionsSucces","catch","error","fetchColectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AACAJ,EAAAA,aAAa,CACVK,GADH,GAEGC,IAFH,CAESC,IAAD,IAAU;AACd,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,IAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACO,qBAAqB,CAACF,cAAD,CAAtB,CAAR;AACD,GALH,EAMGG,KANH,CAMUC,KAAD,IAAWT,QAAQ,CAACU,sBAAsB,CAACD,KAAK,CAACE,OAAP,CAAvB,CAN5B;AAOD;AACD,OAAO,UAAUV,qBAAV,GAAkC;AACvC,QAAMT,SAAS,CACbC,gBAAgB,CAACmB,uBADJ,EAEblB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\n\nimport ShopActionsTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef\n    .get()\n    .then((snap) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snap);\n      dispatch(fetchColletionsSucces(collectionsMap));\n    })\n    .catch((error) => dispatch(fetchColectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionsTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}