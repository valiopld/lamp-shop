{"ast":null,"code":"import _regeneratorRuntime from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/valentin/dev/udemy-react/e-lamp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/auth\";var config={apiKey:\"AIzaSyATZ1NdgUxaCZ5h-bedXb6pyeq8IDv1OCI\",authDomain:\"lamp-db-c1ef2.firebaseapp.com\",databaseURL:\"https://lamp-db-c1ef2.firebaseio.com\",projectId:\"lamp-db-c1ef2\",storageBucket:\"lamp-db-c1ef2.appspot.com\",messagingSenderId:\"1078915198413\",appId:\"1:1078915198413:web:746400890bb5b4d894a884\",measurementId:\"G-Z0WN9863EN\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"Error creating User \",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);console.log({collectionRef:collectionRef});batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=6;return batch.commit();case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({promt:\"select_accout\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyATZ1NdgUxaCZ5h-bedXb6pyeq8IDv1OCI\",\n  authDomain: \"lamp-db-c1ef2.firebaseapp.com\",\n  databaseURL: \"https://lamp-db-c1ef2.firebaseio.com\",\n  projectId: \"lamp-db-c1ef2\",\n  storageBucket: \"lamp-db-c1ef2.appspot.com\",\n  messagingSenderId: \"1078915198413\",\n  appId: \"1:1078915198413:web:746400890bb5b4d894a884\",\n  measurementId: \"G-Z0WN9863EN\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"Error creating User \", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log({ collectionRef });\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ promt: \"select_accout\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}