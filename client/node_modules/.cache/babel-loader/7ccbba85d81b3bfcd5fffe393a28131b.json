{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPrewview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectColletion = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => shop.selections);","map":{"version":3,"sources":["/home/valentin/dev/udemy-react/e-lamp/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPrewview","Object","keys","map","key","selectColletion","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded","selections"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,4BAA4B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAEvDC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHlB,CAAnD;AAKP,OAAO,MAAMC,eAAe,GAAIC,kBAAD,IAC7BZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IAClCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,2BAA2B,GAAGb,cAAc,CACvD,CAACC,UAAD,CADuD,EAEtDE,IAAD,IAAUA,IAAI,CAACW,UAFwC,CAAlD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAEpDE,IAAD,IAAUA,IAAI,CAACa,UAFsC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPrewview = createSelector(\n  [selectCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\nexport const selectColletion = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionsFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  (shop) => shop.selections\n);\n"]},"metadata":{},"sourceType":"module"}